version: "3.4"

services:
    postgres:
        image: postgres:13-alpine
        networks: [ backend ]
        env_file:
          - .env
        volumes:
            - ./data/postgresql:/var/lib/postgresql/data
        restart: always

    go:
        image: ${IMG}
        networks: [ backend, web ]
        volumes:
            - ./log:/log
            - ./.env:/.env
            - ./.ssh:/.ssh
        depends_on:
            - postgres
        env_file:
          - .env
        links:
            - postgres
        restart: always
        labels:
            - traefik.http.routers.${ROUTER}.rule=Host(`${HOST}`)
            - traefik.http.routers.${ROUTER}.tls=true
            - traefik.http.routers.${ROUTER}.tls.certresolver=lets-encrypt

    migrate:
        image: migrate/migrate
        networks: [ backend ]
        volumes:
            - ./migrations:/migrations
        command: ["-path", "/migrations", "-database",  "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable", "up"]
        links:
            - postgres
        depends_on:
            - postgres

networks:
    backend:
    web:
        external: true
